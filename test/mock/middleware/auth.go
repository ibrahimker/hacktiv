// Code generated by MockGen. DO NOT EDIT.
// Source: ./middleware/auth.go

// Package mock_middleware is a generated GoMock package.
package mock_middleware

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthMiddlewareIface is a mock of AuthMiddlewareIface interface.
type MockAuthMiddlewareIface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthMiddlewareIfaceMockRecorder
}

// MockAuthMiddlewareIfaceMockRecorder is the mock recorder for MockAuthMiddlewareIface.
type MockAuthMiddlewareIfaceMockRecorder struct {
	mock *MockAuthMiddlewareIface
}

// NewMockAuthMiddlewareIface creates a new mock instance.
func NewMockAuthMiddlewareIface(ctrl *gomock.Controller) *MockAuthMiddlewareIface {
	mock := &MockAuthMiddlewareIface{ctrl: ctrl}
	mock.recorder = &MockAuthMiddlewareIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthMiddlewareIface) EXPECT() *MockAuthMiddlewareIfaceMockRecorder {
	return m.recorder
}

// AuthBasicMiddleware mocks base method.
func (m *MockAuthMiddlewareIface) AuthBasicMiddleware(next http.Handler) http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthBasicMiddleware", next)
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

// AuthBasicMiddleware indicates an expected call of AuthBasicMiddleware.
func (mr *MockAuthMiddlewareIfaceMockRecorder) AuthBasicMiddleware(next interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthBasicMiddleware", reflect.TypeOf((*MockAuthMiddlewareIface)(nil).AuthBasicMiddleware), next)
}
